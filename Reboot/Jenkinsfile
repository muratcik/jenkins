pipeline {
    agent any

    stages {        

        stage('Stop Service Spooler') {
            steps {
                script {
                    // This step runs the PowerShell script and captures the exit code
                    // If "returnStatus" is set to true, the step returns the script's exit code instead of failing the build automatically.
                    def scriptExitCode = powershell (
                        script: '''
                            .\\Reboot\\winservice.ps1 `
                                -ComputerName "dc1.kcf.com" `
                                -Username "kcf\\Administrator" `
                                -Password "asdASD123!" `
                                -ServiceName "Spooler" `
                                -Action "Stop"
                        ''',
                        returnStatus: true                        
                    )

                    // If exit code != 0, mark build as failed
                    if (scriptExitCode != 0) {
                        error "winservice.ps1 failed with exit code: ${scriptExitCode}"
                    }
                }
            }
        }

        stage('Reboot OS') {
            steps {
                script {
                    // This step runs the PowerShell script and captures the exit code
                    // If "returnStatus" is set to true, the step returns the script's exit code instead of failing the build automatically.
                    def scriptExitCode = powershell (
                        script: '''
                            .\\Reboot\\reboot.ps1 `
                                -ComputerName "dc1.kcf.com" `
                                -Username "kcf\\Administrator" `
                                -Password "asdASD123!" `
                        ''',
                        returnStatus: true                        
                    )

                    // If exit code != 0, mark build as failed
                    if (scriptExitCode != 0) {
                        error "winservice.ps1 failed with exit code: ${scriptExitCode}"
                    }
                }
            }
        }
        stage('Check OS') {
            steps {
                script {
                    // This step runs the PowerShell script and captures the exit code
                    // If "returnStatus" is set to true, the step returns the script's exit code instead of failing the build automatically.
                    def scriptExitCode = powershell (
                        script: '''
                            .\\Reboot\\check-reboot.ps1 `
                                -ComputerName "dc1.kcf.com" `
                                -Username "kcf\\Administrator" `
                                -Password "asdASD123!" `
                        ''',
                        returnStatus: true                        
                    )

                    // If exit code != 0, mark build as failed
                    if (scriptExitCode != 0) {
                        error "winservice.ps1 failed with exit code: ${scriptExitCode}"
                    }
                }
            }
        }

        stage('Run getdate.ps1 and Capture Output') {
            steps {
                script {
                    // Run getdate.ps1 and capture both output and exit code
                    def getDateResult = powershell(
                        script: '.\\Reboot\\getdate.ps1',
                        returnStdout: true,
                        returnStatus: true
                    )

                    def output = getDateResult[0].trim() // First element is stdout
                    def exitCode = getDateResult[1]      // Second element is exit code

                    echo "Captured Output: ${output}"
                    echo "Exit Code from getdate.ps1: ${exitCode}"

                    // Store in an environment variable for next stage
                    env.PS_OUTPUT = output

                    // Fail the pipeline if getdate.ps1 returns nonzero exit code
                    if (exitCode != 0) {
                        error "getdate.ps1 failed with exit code: ${exitCode}"
                    }
                }
            }
        }

        stage('Pass Output to processdate.ps1') {
            steps {
                script {
                    // Run processdate.ps1 with captured output
                    def processResult = powershell(
                        script: ".\\Reboot\\processdate.ps1 -InputValue \"${env.PS_OUTPUT}\"",
                        returnStatus: true
                    )

                    def exitCode = processResult // Only one value (exit code) is returned

                    echo "Exit Code from processdate.ps1: ${exitCode}"

                    // Fail the pipeline if processdate.ps1 returns nonzero exit code
                    if (exitCode != 0) {
                        error "processdate.ps1 failed with exit code: ${exitCode}"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'The script completed successfully.'
        }
        failure {
            echo 'The script encountered an error.'
        }
    }
}
